name: ci

on:
    pull_request:

jobs:
    lint:
        name: lint(prettier)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest

            - name: Install dependencies
              run: npm install

            - name: Check code formatting with prettier
              run: npx prettier . --check

    build_frontend:
        name: validate frontend
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest

            - name: Install dependencies
              run: npm install
              working-directory: frontend

            - name: Run Build
              run: npm run build
              working-directory: frontend
    # TODO: Add a step that speficially verifies the backend.
    # To do so, we'd need to have a local instance of the database.

    docker_compose:
        name: validate docker build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build docker image
              run: docker compose -f docker-compose.yaml build

    api_test:
        name: run api tests (playwright)
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install test prerequisites
              run: npm install

            - name: Build dev docker image
              run: docker compose -f docker-compose.yaml -f docker-compose.dev.yaml -f docker-compose.db.yaml up --build -d

            - name: Initialize database
              run: docker exec -i mssql /opt/mssql-tools18/bin/sqlcmd -S "tcp:mssql,1433" -U sa -P 'YourStrong!Passw0rd' -d master -i /docker-entrypoint-initdb.d/dev.sql -C

            - name: Wait for database setup
              run: sleep 8

            - name: Run playwright tests
              run: firebase emulators:exec --project ag-kilocal "npx playwright test"
