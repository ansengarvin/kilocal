openapi: 3.0.3
info:
  title: KiloCalorie API
  description: A RESTful API for tracking daily caloric intake
  version: 0.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /users/login:
    post:
      summary: Login
      description: Login with the given username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token
        '401':
          description: Unauthorized

  /users:
    post:
      summary: Create a new user
      description: Create a new user with the given username and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the new user
                password:
                  type: string
                  description: The password of the new user
                name:
                  type: string
                  description: The name of the new user
                weight:
                  type: number
                  description: The weight of the new user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the new user
                  email:
                    type: string
                    description: The email of the new user
                  name:
                    type: string
                    description: The name of the new user
                  weight:
                    type: number
                    description: The weight of the new user
                  token:
                    type: string
                    description: The token of the new user
        '403':
          description: User already exists

  /users/{id}:
    get:
      summary: Get a user by id
      description: Get a user by their id
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to get
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the user
                  email:
                    type: string
                    description: The email of the user
                  name:
                    type: string
                    description: The name of the user
                  weight:
                    type: number
                    description: The weight of the user
        '401':
          description: Unauthorized
        '404':
          description: User does not exist
    put:
      summary: Update a user by id
      description: Update a user by their id
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email of the user
                name:
                  type: string
                  description: The name of the user
                weight:
                  type: number
                  description: The weight of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the user
                  email:
                    type: string
                    description: The email of the user
                  name:
                    type: string
                    description: The name of the user
                  weight:
                    type: number
                    description: The weight of the user
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: User does not exist
    delete:
      summary: Delete a user by id
      description: Delete a user by their id
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: User does not exist

  /users/{id}/recipes:
    get:
      summary: Get all recipes for a user
      description: Get all recipes that the user has
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The id of the recipe
                    name:
                      type: string
                      description: The name of the recipe
        '401':
          description: Unauthorized
        '404':
          description: User does not exist

  /users/{id}/days:
    get:
      summary: Get all days for a user
      description: Get all information for a user's days
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The id of the day
                    date:
                      type: string
                      format: date
                      description: The date of the day
        '401':
          description: Unauthorized
        '404':
          description: User does not exist
          
  /users/{id}/days/{date}:
    get:
      summary: Get a day for a user by date
      description: Get all information for a user's day
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user
          schema:
            type: integer
        - name: date
          in: path
          required: true
          description: The date of the day
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the day
                  date:
                    type: string
                    format: date
                    description: The date of the day
                  foods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the food
                        name:
                          type: string
                          description: The name of the food
                        calories:
                          type: integer
                          description: The calories of the food
                        position:
                          type: integer
                          description: The position of the order that the item should be displayed in
                  recipes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the recipe
                        name:
                          type: string
                          description: The name of the recipe
                        position:
                          type: string
                          description: The position of the order that the recipe should be displayed in
                        foods:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The id of the food
                              name:
                                type: string
                                description: The name of the food
                              calories:
                                type: integer
                                description: The calories of the food
                              position:
                                type: integer
                                description: The position of the order that the item should be displayed in
        '401':
          description: Unauthorized
        '404':
          description: User or day does not exist
  /recipes:
    post:
      summary: Create a new recipe
      description: Post a new recipe to a user's book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the recipe
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the new recipe
                  name:
                    type: string
                    description: The name of the new recipe
        '400':
          description: Invalid request

  /recipes/{recipe_id}:
    get:
      summary: Get a recipe by id
      description: Get all foods for a single recipe
      parameters:
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe to get
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the recipe
                  name:
                    type: string
                    description: The name of the recipe
                  foods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the food
                        name:
                          type: string
                          description: The name of the food
                        calories:
                          type: integer
                          description: The calories of the food
                        position:
                          type: integer
                          description: The position of the food in the recipe
        '401':
          description: Unauthorized
        '404':
          description: Recipe does not exist
    put:
      summary: Update a recipe by id
      description: Edit the name of a single recipe
      parameters:
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the recipe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the recipe
                  name:
                    type: string
                    description: The name of the recipe
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Recipe does not exist

  /recipes/{recipe_id}/foods:
    post:
      summary: Add a food to a recipe
      description: Post a food in an existing recipe
      parameters:
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe to add the food to
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the food
                calories:
                  type: integer
                  description: The calories of the food
                position:
                  type: integer
                  description: The position of the food in the recipe
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the food
                  name:
                    type: string
                    description: The name of the food
                  calories:
                    type: integer
                    description: The calories of the food
                  position:
                    type: integer
                    description: The position of the food in the recipe
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Recipe does not exist

  /recipes/{recipe_id}/foods/{food_id}:
    put:
      summary: Update a food in a recipe
      description: Edit the recipe for a single food
      parameters:
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          description: The id of the food to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the food
                calories:
                  type: integer
                  description: The calories of the food
                position:
                  type: integer
                  description: The position of the food in the recipe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the food
                  name:
                    type: string
                    description: The name of the food
                  calories:
                    type: integer
                    description: The calories of the food
                  position:
                    type: integer
                    description: The position of the food in the recipe
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Food does not exist
    delete:
      summary: Delete a food from a recipe
      description: Delete a food from a recipe book
      parameters:
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          description: The id of the food to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Food does not exist
  /days:
    post:
      summary: Add a new day
      description: Add a new day
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: The date of the day
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the new day
                  date:
                    type: string
                    format: date
                    description: The date of the new day
        '401':
          description: Unauthorized
        '400':
          description: Invalid request
  /days/{date}:
    get:
      summary: Get a day by id
      description: Get a single day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day to get
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the day
                  date:
                    type: string
                    format: date
                    description: The date of the day
                  total_calories:
                    type: number
                    description: Total number of calories for the day, in kcal
                  total_carbs:
                    type: number
                    description: Total amount of carbs for the day, in grams
                  total_protein:
                    type: number
                    description: Total amount of protein for the day, in grams
                  total_fat:
                    type: number
                    description: Total amount of fat for the day, in grams
                  foods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the food
                        name:
                          type: string
                          description: The name of the food
                        calories:
                          type: number
                          description: The calories of the food
                        amount:
                          type: integer
                          description: The number of food items
                        protein:
                          type: number
                          description: Amount of protein, in grams
                        carbs:
                          type: number
                          description: Amount of carbs, in grams
                        fat:
                          type: number
                          description: Amount of fat, in grams
                        position:
                          type: integer
                          description: The position of the food in the day
                  recipes:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The id of the recipe
                        name:
                          type: string
                          description: The name of the recipe
                        position:
                          type: integer
                          description: The position of the recipe in the day
                        foods:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The id of the food
                              name:
                                type: string
                                description: The name of the food
                              calories:
                                type: integer
                                description: The calories of the food
                              position:
                                type: integer
                                description: The position of the food in the recipe
        '401':
          description: Unauthorized
        '404':
          description: Day does not exist
    put:
      summary: Update a day by id
      description: Edit a day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: The date of the day
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the day
                  date:
                    type: string
                    format: date
                    description: The date of the day
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Day does not exist
    delete:
      summary: Delete a day by id
      description: Delete a day's entry
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Day does not exist

  /days/{date}/recipes:
    post:
      summary: Add a user's recipe to a day
      description: Add a user's recipe to a day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day to add the recipe to
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipe_id:
                  type: integer
                  description: The id of the recipe to add
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the recipe in the day
                  recipe_id:
                    type: integer
                    description: The id of the recipe
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Day or recipe does not exist

  /days/{date}/recipes/{recipe_id}:
    delete:
      summary: Delete a recipe from a day
      description: Delete a user's recipe from a day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day
          schema:
            type: integer
        - name: recipe_id
          in: path
          required: true
          description: The id of the recipe to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Day or recipe does not exist

  /foods:
    post:
      summary: Add a food to a day
      description: Add a food to a day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day to add the food to
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: date
                  description: The date where the food should be inserted
                calories:
                  type: integer
                  description: The calories in this food entry.
                name:
                  type: string
                  description: Optional - The name of this food entry.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The id of the food in the day
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Day or food does not exist

  /days/{date}/foods/{food_id}:
    delete:
      summary: Delete a food from a day
      description: Delete a food from a day
      parameters:
        - name: date
          in: path
          required: true
          description: The id of the day
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          description: The id of the food to delete
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Day or food does not exist